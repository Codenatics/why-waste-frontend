{"version":3,"sources":["components/DrawerToggleButton.js","components/Logo.js","components/Toolbar.js","components/Backdrop.js","components/SearchBox.js","components/pages/LandingPage.js","components/SearchResults.js","components/Counter.js","components/ResultsHeader.js","components/pages/SearchResultsPage.js","components/pages/Register.js","components/pages/Donate.js","App.js","serviceWorker.js","index.js"],"names":["DrawerToggleButton","props","className","Logo","Toolbar","href","Backdrop","SearchBox","useState","search","setSearch","validPostcode","test","Fragment","type","placeholder","value","onChange","event","target","aria-required","to","class","disabled","length","LandingPage","style","height","marginTop","id","SearchResults","modalIsOpen","setModalIsOpen","onClick","Foodtype","Quantity","moment","UseByDate","format","Name","open","onClose","Counter","count","ResultsHeader","SearchResultsPage","meals","setMeals","router","useLocation","console","log","useEffect","postcode","queryString","parse","location","axios","get","then","response","data","catch","err","map","meal","key","FoodID","FoodType","Register","for","Donate","dishName","setDishName","quantity","setQuantity","consumeBy","setConsumeBy","formView","setFormView","thanksMessage","setThanksMessage","preventDefault","App","path","component","exact","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.38805867.chunk.js","sourcesContent":["import React from \"react\";\nimport '../assets/DrawerToggleButton.css'\n\nfunction DrawerToggleButton(props) {\n    return (\n        <button className=\"toggle-button\">\n            <div className=\"toggle-button_line\"></div>\n            <div className=\"toggle-button_line\"></div>\n            <div className=\"toggle-button_line\"></div>\n        </button>\n    )\n};\n\nexport default DrawerToggleButton;","import React from \"react\";\nimport '../assets/Logo.css'\n\nfunction Logo(){\n    return (\n        <h1>WhyWaste?</h1>\n    )\n}\n\nexport default Logo;","import React from \"react\";\nimport \"../assets/Toolbar.css\";\nimport DrawerToggleButton from \"./DrawerToggleButton\";\nimport Logo from \"./Logo\";\n\nfunction Toolbar(props) {\n    return (\n        <header className=\"toolbar\">\n            <nav className=\"toolbar_navigation\">\n                <div>\n                    <DrawerToggleButton />\n                </div>\n                <div className=\"toolbar-logo\">\n                    <a href=\"/\"><Logo /></a>\n                </div>\n                <div className=\"spacer\" />\n                <div className=\"toolbar_navigation-items\">\n                    <ul>\n                        <li><a href=\"/\">Home</a></li>\n                        <li><a href=\"/\">Donors</a></li>\n                        <li><a href=\"/register\">Register</a></li>\n                    </ul>\n                </div>\n            </nav>\n        </header>\n    )\n\n}\n\nexport default Toolbar;","import React from \"react\";\nimport '../assets/Backdrop.css';\n\nfunction Backdrop(props){\n    return (\n        <div className=\"backdrop\" />\n    )\n}\n\nexport default Backdrop;","\nimport React, { useState } from \"react\";\nimport '../assets/Searchbox.css';\nimport { Link, BrowserRouter } from \"react-router-dom\";\n\nfunction SearchBox(props) {\n\n    const [search, setSearch] = useState(\"\")\n    const validPostcode = /^([A-Za-z][A-Ha-hJ-Yj-y]?[0-9][A-Za-z0-9]? ?[0-9][A-Za-z]{2}|[Gg][Ii][Rr] ?0[Aa]{2})$/.test(search)\n        \n    const updatedSearch = (event) => {\n        setSearch(event.target.value)\n    }\n\n    return (\n        <React.Fragment>\n            <form className=\"search-box\">\n                <input type=\"text\" placeholder=\"Enter your postcode: e.g. M1 3ER\" value={search} onChange={updatedSearch} aria-required=\"true\"></input>\n                {!validPostcode? <button className=\"btn btn-search\" disabled>Search</button>:\n                <Link to={`/SearchResults?postcode=${search}`}><button class=\"btn btn-search\">Search</button></Link>}\n                {search.length > 5 && !validPostcode ? <h5 className=\"validation\">We couldn't recognise that postcode â€“ check and try again.</h5> : \"\"}\n            </form>\n        </React.Fragment>\n    )\n}\n\nexport default SearchBox;","import React, { useState } from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"../../assets/base.css\";\nimport Toolbar from \"../Toolbar\";\nimport SideDrawer from \"../../components/SideDrawer\";\nimport Backdrop from \"../../components/Backdrop\";\nimport SearchBox from '../../components/SearchBox';\nimport { Link } from \"react-router-dom\";\n\nfunction LandingPage(props) {\n\n  return (\n    <div style={{ height: '100%' }}>\n      <main style={{ marginTop: '56px' }}>\n        <Toolbar />\n        {/* <SideDrawer /> */}\n        {/* <Backdrop /> */}\n        <h3>Bridging the gap <br></br> between need and surplus</h3>\n        <SearchBox />\n\n        <Link to=\"/Donate\" id=\"main-link\">I want to donate food</Link>\n      </main>\n    </div>\n  );\n}\n\nexport default LandingPage;","import React, { useState } from \"react\";\nimport '../../src/assets/SearchResults.css';\nimport moment from \"moment\";\nimport \"../../src/assets/Modal.css\"\nimport { Modal } from 'react-responsive-modal';\n\nimport 'react-responsive-modal/styles.css';\nimport \"../assets/Modal.css\"\n\n\nfunction SearchResults(props) {\n\n    const [modalIsOpen, setModalIsOpen] = useState(false)\n\n    const isOpen = () => {\n        setModalIsOpen(true)\n    }\n\n    const isClosed = () => {\n        setModalIsOpen(false)\n    }\n\n    return (\n        <React.Fragment>\n            <div className=\"container-fluid container-sm container-md container-lg\">\n                <div className=\"row results-items\" onClick={isOpen}>\n                    <div className=\"col-5 col-sm-5 col-md-5 col-lg-6\">\n                        {props.Foodtype}\n                    </div>\n                    <div className=\"col-1 col-sm-1 col-md-1 col-lg-1\">\n                        {props.Quantity}\n                    </div>\n                    <div className=\"col-3 col-sm-3 col-md-3 col-lg-2\">\n                        {moment(props.UseByDate).format(\"ddd, MMM Do\")}\n                    </div>\n                    <div className=\"col-3 col-sm-3 col-md-3 col-lg-3\">\n                        {props.Name}\n                    </div>\n                </div>\n            </div>\n            <Modal open={modalIsOpen} onClose={isClosed}>\n                <div className=\"container-modal\">\n                <h1>Please collect your meal at :</h1>\n                <br></br>\n                <h5>The Market Place</h5>\n                <h5>Bolton</h5>\n                <h5>BL1 2AL</h5>\n                <h5>01204 937 335</h5>\n                <h5>some_one@prezzo.com</h5>\n                </div>\n            </Modal>\n            \n        </React.Fragment>\n    )\n}\n\nexport default SearchResults;","import React from \"react\";\nimport \"../assets/Counter.css\"\n\nfunction Counter(props) {\n\n    return (\n        <div className=\"container-counter\">\n            {props.count === 0 ? <p>Sorry, we didn't find any meals available here</p>: <p>There are {props.count} meals available:</p>}\n        </div>\n    )\n}\nexport default Counter;","import React from \"react\";\nimport \"../assets/ResultsHeader.css\";\n\n\nfunction ResultsHeader(props) {\n    return (\n            <div className=\"container-fluid container-sm container-md container-lg header-results\">\n            <div className=\"row header-items\">\n                    <div className=\"item col-4 col-sm-5 col-md-5 col-lg-6\">Dish</div>\n                    <div className=\"item col-1 col-sm-1 col-md-1 col-lg-1\">Qty.</div>\n                    <div className=\"item col-3 col-sm-3 col-md-3 col-lg-2\">Consume by</div>\n                    <div className=\"item col-3 col-sm-3 col-md-3 col-lg-3\">From</div>\n                </div>\n        </div>\n    )\n}\n\nexport default ResultsHeader;","import React, { useState, useEffect } from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../../assets/Searchbox.css';\nimport axios from \"axios\";\nimport Toolbar from \"../Toolbar\";\nimport SideDrawer from \"../SideDrawer\";\nimport SearchResults from '../SearchResults';\nimport Counter from \"../Counter\";\nimport { useLocation } from \"react-router-dom\";\nimport queryString from \"query-string\";\nimport ResultsHeader from \"../ResultsHeader\";\n\n\nfunction SearchResultsPage(props) {\n    const [meals, setMeals] = useState([]);\n    const router = useLocation();\n    console.log(router)\n\n    useEffect(() => {\n        const values = queryString.parse(props.location.search);\n        const postcode = values.postcode\n        axios.get(`https://z0akxs8ksh.execute-api.eu-west-1.amazonaws.com/dev/restaurant/${postcode}`)\n            .then(response => {\n                console.log(\"Success\", response.data)\n                setMeals(response.data);\n            })\n            .catch(err => {\n                console.log(\"Error\", err);\n            });\n    }, [])\n\n\n    return (\n        <main>\n            <Toolbar />\n            {/* <SideDrawer /> */}\n            <Counter\n                count={meals.length} />\n            {meals.length === 0 ? \"\" :<ResultsHeader />}\n            \n            <div className=\"container\">\n                {meals.map(meal => {\n                    return (\n                        <React.Fragment>\n                            <SearchResults\n                                key={meal.FoodID}\n                                Foodtype={meal.FoodType}\n                                Quantity={meal.Quantity}\n                                UseByDate={meal.UseByDate}\n                                Name={meal.Name}\n                            />\n                        </React.Fragment>\n                    )\n                })}\n            </div>\n        </main>\n    )\n}\n\nexport default SearchResultsPage;","import React from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"../../assets/forms.css\";\nimport Toolbar from \"../Toolbar\"\nimport { Link } from \"react-router-dom\";\n\nfunction Register() {\n    return (\n        <React.Fragment>\n            <Toolbar />\n            <form className=\"donate-form\">\n                <header>\n                    <h1>Register today!</h1>\n                </header>\n\n                <div class=\"form-row\">\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"companyName\">Company name</label>\n                        <input type=\"text\" class=\"form-control\" id=\"companyName\" />\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"email\">E-mail</label>\n                        <input type=\"text\" class=\"form-control\" id=\"e-mail\" />\n                    </div>\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"address\">Address</label>\n                    <input type=\"text\" class=\"form-control\" id=\"address\" />\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"inputAddress2\">Address 2</label>\n                    <input type=\"text\" class=\"form-control\" id=\"inputAddress2\" placeholder=\"Apartment, studio, or floor\" />\n                </div>\n                <div class=\"form-row\">\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"inputCity\">City</label>\n                        <input type=\"text\" class=\"form-control\" id=\"inputCity\" />\n                    </div>\n\n                    <div class=\"form-group col-md-2\">\n                        <label for=\"inputPostcode\">Postcode</label>\n                        <input type=\"text\" class=\"form-control\" id=\"inputPostcode\" />\n                    </div>\n                </div>\n                <button type=\"submit\" class=\"btn btn-primary\">Save</button>\n\n            </form>\n        </React.Fragment>\n    )\n}\n\nexport default Register;","import React, { useState } from \"react\";\nimport \"../../assets/forms.css\";\nimport Toolbar from \"../Toolbar\";\nimport { Link } from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nfunction Donate(props) {\n\n    const [dishName, setDishName] = useState(\"\");\n    const [quantity, setQuantity] = useState(\"\");\n    const [consumeBy, setConsumeBy] = useState(\"\");\n    const [newDish, setNewDish] = useState(\"\");\n    const [formView, setFormView] = useState(true)\n    const [thanksMessage, setThanksMessage] = useState(false)\n\n\n    const handleDishNameChange = event => {\n        setDishName(event.target.value)\n    }\n\n    const handleQuantityChange = event => {\n        setQuantity(event.target.value)\n    }\n\n    const handleConsumeByChange = event => {\n        setConsumeBy(event.target.value)\n    }\n    const handleSaveClick = (event) => {\n        event.preventDefault()\n        console.log(dishName, quantity, consumeBy)\n        setFormView(false)\n        setThanksMessage(true)\n    }\n\n    return (\n        <React.Fragment>\n            <Toolbar />\n            {formView === false && thanksMessage === true? <h3 className=\"thanks-message\" value={thanksMessage}>Your dish has been added. Thank you for your contribution.</h3> : \n            <form className=\"donate-form\" value={formView}>\n                <header>\n                    <h1>Donate today!</h1>\n                    <h4>Thank you for your contribution</h4>\n                </header>\n\n                <div class=\"form-row\">\n                    <div class=\"form-group col-md-12\">\n                        <label for=\"dishName\">Dish name</label>\n                        <input type=\"dish\" class=\"form-control\" id=\"dishName\" value={dishName} onChange={handleDishNameChange} />\n                    </div>\n                    <div class=\"form-group col-md-12\">\n                        <label for=\"quantity\">Quantity</label>\n                        <input type=\"quantity\" class=\"form-control\" id=\"quantity\" value={quantity} onChange={handleQuantityChange} />\n                    </div>\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"consumeBy\">Consume By</label>\n                    <input type=\"date\" class=\"form-control\" id=\"consumeBy\" value={consumeBy} onChange={handleConsumeByChange} />\n                </div>\n\n                <button type=\"text\" class=\"btn btn-primary\" onClick={handleSaveClick}>Donate</button>\n            </form>}\n\n        </React.Fragment>\n    )\n}\n\nexport default Donate;","import React from 'react';\nimport LandingPage from './components/pages/LandingPage';\nimport SearchResultsPage from './components/pages/SearchResultsPage';\nimport Register from './components/pages/Register'\nimport {Route, Switch} from 'react-router-dom';\nimport Donate from \"../src/components/pages/Donate\";\n\nfunction App() {\n\n  return (\n    <Switch>\n      <Route path=\"/SearchResults\" component={SearchResultsPage}/>\n      <Route exact path=\"/Donate\" component={Donate} />\n      <Route exact path=\"/Register\" component={Register} />\n      <Route exact path=\"/\" component={LandingPage} />\n\n    </Switch>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}